# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]
       # The label name is added as a label `label_name=<label_value>` to any timeseries scraped from this config.
        labels:
          app: "prometheus"

  # 监控后端服务
  - job_name: "excelgenius-backend"
    metrics_path: '/metrics'
    scheme: 'http'
    static_configs:
      - targets: ["localhost:8000"]
        labels:
          app: "excelgenius"
          component: "backend"

  # 监控前端服务（已注释，因为前端未实现/metrics端点）
  # - job_name: "excelgenius-frontend"
  #   metrics_path: '/metrics'
  #   scheme: 'http'
  #   static_configs:
  #     - targets: ["localhost:3000"]
  #       labels:
  #         app: "excelgenius"
  #         component: "frontend"

  # 监控Windows系统资源
  - job_name: "windows-exporter"
    metrics_path: '/metrics'
    scheme: 'http'
    static_configs:
      - targets: ["localhost:9182"]
        labels:
          app: "excelgenius"
          component: "system"
